generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id               Int         @id @default(autoincrement())
  userType         String?
  firstname        String?
  lastname         String?
  streetAddress    String?
  city             String?
  province         String?
  postalCode       String?
  email            String?    @unique
  password         String?
  createdAt        DateTime?  @default(now())
  updatedAt        DateTime?  @updatedAt
  rate             Int?
  sitterAvailability String?
  
  // Relationships
  messagesSent     Message[]   @relation("Sender")
  messagesReceived Message[]   @relation("Receiver")
  dogs             Dog[]       @relation("Owner")
  dogSitter       DogSitter[]
}

model Message {
  id         Int      @id @default(autoincrement())
  timestamp  DateTime?
  message    String?
  
  // Relationships
  sender     User     @relation("Sender", fields: [senderId], references: [id])
  senderId   Int
  receiver   User     @relation("Receiver", fields: [receiverId], references: [id])
  receiverId Int
}

model Dog {
  id           Int      @id @default(autoincrement())
  name         String?
  yearOfBirth  DateTime?
  weight       Int?
  temperament  String?
  comments     String?
  image        String?
  
  // Relationships
  breed        Breed    @relation(fields: [breedId], references: [id])
  breedId      Int
  owner        User     @relation("Owner", fields: [ownerId], references: [id])
  ownerId      Int
  dogSitters   DogSitter[]
}

model Breed {
  id      Int      @id @default(autoincrement())
  name    String?
  images  String?
  
  // Relationships
  dogs    Dog[]
}

model DogSitter {
  id            Int      @id @default(autoincrement())
  duration      DateTime?
  value         Int?
  rating        Int?
  
  // Relationships
  sitter        User     @relation(fields: [sitterId], references: [id])
  sitterId      Int
  dog           Dog      @relation(fields: [dogId], references: [id])
  dogId         Int
}
